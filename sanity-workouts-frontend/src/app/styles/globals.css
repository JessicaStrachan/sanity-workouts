@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
    --black: #000000;
    --white: #ffffff;
  }

.section {
    padding-bottom: 40px;
    padding-top: 40px

    + .section {
        padding-top: 0;
    }
}

.container {
    margin-left: auto;
    margin-right: auto;
    max-width: 1200px;
    padding-left: 20px;
    padding-right: 20px;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
    cursor: revert;
}

/* Ensure ALL buttons have correct hover behaviour, not just <Button> components */
button:hover {
    cursor: pointer;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-width: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
    - fix for the content editable attribute will work properly.
    - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable='false'])) {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-line-break: after-white-space;
    overflow-wrap: break-word;
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable='true']) {
    -webkit-user-drag: element;
}

html,
body {
    font-family: Arial, sans-serif;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-weight: 400;
    margin: 0;
    padding: 0;
}

/* @font-face {
    font-family: 'Arial Rounded Bold';
    font-style: normal;
    font-weight: normal;
    src: url('../public/assets/fonts/arial-rounded-bold.ttf');
} */

body {
    background: #000000;
    color: #ffffff;
}

/* NEXTJS adds an inline style of `overflow: auto`. !important is required to override this. */
body.overflow-hidden {
    overflow: hidden !important;
}

main {
    position: relative;
}